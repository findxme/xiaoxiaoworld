<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xmx.ssm.dao.TReaderMapper">
    <resultMap id="BaseResultMap" type="com.xmx.ssm.entity.TReader">
        <id column="b_reader_id" jdbcType="INTEGER" property="bReaderId"/>
        <id column="b_reader_no" jdbcType="VARCHAR" property="bReaderNo"/>
        <id column="b_reader_name" jdbcType="VARCHAR" property="bReaderName"/>
        <id column="b_reader_email" jdbcType="VARCHAR" property="bReaderEmail"/>
        <result column="b_reader_password" jdbcType="VARCHAR" property="bReaderPassword"/>
        <result column="b_reader_borrow_number" jdbcType="INTEGER" property="bReaderBorrowNumber"/>
        <result column="b_reader_borrow_already_number" jdbcType="INTEGER" property="bReaderBorrowAlreadyNumber"/>
        <result column="b_reader_borrow_time" jdbcType="java.sql.Date" property="bReaderBorrowTime"/>
        <result column="b_reader_mobile" jdbcType="VARCHAR" property="bReaderMobile"/>
        <result column="b_reader_Remarks" jdbcType="VARCHAR" property="bReaderRemarks"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    b_reader_id, b_reader_no, b_reader_name, b_reader_email, b_reader_password, b_reader_borrow_number, 
    b_reader_borrow_already_number, b_reader_borrow_time, b_reader_mobile, b_reader_Remarks
  </sql>

    <select id="findReaderByNo" parameterType="String" resultMap="BaseResultMap">
        select * from t_reader where b_reader_no=#{readerNo}
    </select>

    <select id="findReaderByName" parameterType="String" resultMap="BaseResultMap">
        select * from t_reader where b_reader_name=#{readerName}
    </select>


    <select id="selectByExample" parameterType="com.xmx.ssm.entity.TReaderExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from t_reader
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_reader
        where b_reader_id = #{bReaderId,jdbcType=INTEGER}
        and b_reader_no = #{bReaderNo,jdbcType=VARCHAR}
        and b_reader_name = #{bReaderName,jdbcType=VARCHAR}
        and b_reader_email = #{bReaderEmail,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="map">
    delete from t_reader
    where b_reader_id = #{bReaderId,jdbcType=INTEGER}
      and b_reader_no = #{bReaderNo,jdbcType=VARCHAR}
      and b_reader_name = #{bReaderName,jdbcType=VARCHAR}
      and b_reader_email = #{bReaderEmail,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByExample" parameterType="com.xmx.ssm.entity.TReaderExample">
        delete from t_reader
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.xmx.ssm.entity.TReader">
    insert into t_reader (b_reader_id, b_reader_no, b_reader_name, 
      b_reader_email, b_reader_password, b_reader_borrow_number, 
      b_reader_borrow_already_number, b_reader_borrow_time, 
      b_reader_mobile, b_reader_Remarks)
    values (#{bReaderId,jdbcType=INTEGER}, #{bReaderNo,jdbcType=VARCHAR}, #{bReaderName,jdbcType=VARCHAR}, 
      #{bReaderEmail,jdbcType=VARCHAR}, #{bReaderPassword,jdbcType=VARCHAR}, #{bReaderBorrowNumber,jdbcType=INTEGER}, 
      #{bReaderBorrowAlreadyNumber,jdbcType=INTEGER}, #{bReaderBorrowTime,jdbcType=java.sql.Date},
      #{bReaderMobile,jdbcType=VARCHAR}, #{bReaderRemarks,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.xmx.ssm.entity.TReader">
        insert into t_reader
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="bReaderId != null">
                b_reader_id,
            </if>
            <if test="bReaderNo != null">
                b_reader_no,
            </if>
            <if test="bReaderName != null">
                b_reader_name,
            </if>
            <if test="bReaderEmail != null">
                b_reader_email,
            </if>
            <if test="bReaderPassword != null">
                b_reader_password,
            </if>
            <if test="bReaderBorrowNumber != null">
                b_reader_borrow_number,
            </if>
            <if test="bReaderBorrowAlreadyNumber != null">
                b_reader_borrow_already_number,
            </if>
            <if test="bReaderBorrowTime != null">
                b_reader_borrow_time,
            </if>
            <if test="bReaderMobile != null">
                b_reader_mobile,
            </if>
            <if test="bReaderRemarks != null">
                b_reader_Remarks,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="bReaderId != null">
                #{bReaderId,jdbcType=INTEGER},
            </if>
            <if test="bReaderNo != null">
                #{bReaderNo,jdbcType=VARCHAR},
            </if>
            <if test="bReaderName != null">
                #{bReaderName,jdbcType=VARCHAR},
            </if>
            <if test="bReaderEmail != null">
                #{bReaderEmail,jdbcType=VARCHAR},
            </if>
            <if test="bReaderPassword != null">
                #{bReaderPassword,jdbcType=VARCHAR},
            </if>
            <if test="bReaderBorrowNumber != null">
                #{bReaderBorrowNumber,jdbcType=INTEGER},
            </if>
            <if test="bReaderBorrowAlreadyNumber != null">
                #{bReaderBorrowAlreadyNumber,jdbcType=INTEGER},
            </if>
            <if test="bReaderBorrowTime != null">
                #{bReaderBorrowTime,jdbcType=java.sql.Date},
            </if>
            <if test="bReaderMobile != null">
                #{bReaderMobile,jdbcType=VARCHAR},
            </if>
            <if test="bReaderRemarks != null">
                #{bReaderRemarks,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" resultType="java.lang.Long">
        select count(*) from t_reader
<!--        <if test="_parameter != null">-->
<!--            <include refid="Example_Where_Clause"/>-->
<!--        </if>-->
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update t_reader
        <set>
            <if test="record.bReaderId != null">
                b_reader_id = #{record.bReaderId,jdbcType=INTEGER},
            </if>
            <if test="record.bReaderNo != null">
                b_reader_no = #{record.bReaderNo,jdbcType=VARCHAR},
            </if>
            <if test="record.bReaderName != null">
                b_reader_name = #{record.bReaderName,jdbcType=VARCHAR},
            </if>
            <if test="record.bReaderEmail != null">
                b_reader_email = #{record.bReaderEmail,jdbcType=VARCHAR},
            </if>
            <if test="record.bReaderPassword != null">
                b_reader_password = #{record.bReaderPassword,jdbcType=VARCHAR},
            </if>
            <if test="record.bReaderBorrowNumber != null">
                b_reader_borrow_number = #{record.bReaderBorrowNumber,jdbcType=INTEGER},
            </if>
            <if test="record.bReaderBorrowAlreadyNumber != null">
                b_reader_borrow_already_number = #{record.bReaderBorrowAlreadyNumber,jdbcType=INTEGER},
            </if>
            <if test="record.bReaderBorrowTime != null">
                b_reader_borrow_time = #{record.bReaderBorrowTime,jdbcType=DOUBLE},
            </if>
            <if test="record.bReaderMobile != null">
                b_reader_mobile = #{record.bReaderMobile,jdbcType=VARCHAR},
            </if>
            <if test="record.bReaderRemarks != null">
                b_reader_Remarks = #{record.bReaderRemarks,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update t_reader
        set b_reader_id = #{record.bReaderId,jdbcType=INTEGER},
        b_reader_no = #{record.bReaderNo,jdbcType=VARCHAR},
        b_reader_name = #{record.bReaderName,jdbcType=VARCHAR},
        b_reader_email = #{record.bReaderEmail,jdbcType=VARCHAR},
        b_reader_password = #{record.bReaderPassword,jdbcType=VARCHAR},
        b_reader_borrow_number = #{record.bReaderBorrowNumber,jdbcType=INTEGER},
        b_reader_borrow_already_number = #{record.bReaderBorrowAlreadyNumber,jdbcType=INTEGER},
        b_reader_borrow_time = #{record.bReaderBorrowTime,jdbcType=DOUBLE},
        b_reader_mobile = #{record.bReaderMobile,jdbcType=VARCHAR},
        b_reader_Remarks = #{record.bReaderRemarks,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.xmx.ssm.entity.TReader">
        update t_reader
        <set>
            <if test="bReaderPassword != null">
                b_reader_password = #{bReaderPassword,jdbcType=VARCHAR},
            </if>
            <if test="bReaderBorrowNumber != null">
                b_reader_borrow_number = #{bReaderBorrowNumber,jdbcType=INTEGER},
            </if>
            <if test="bReaderBorrowAlreadyNumber != null">
                b_reader_borrow_already_number = #{bReaderBorrowAlreadyNumber,jdbcType=INTEGER},
            </if>
            <if test="bReaderBorrowTime != null">
                b_reader_borrow_time = #{bReaderBorrowTime,jdbcType=DOUBLE},
            </if>
            <if test="bReaderMobile != null">
                b_reader_mobile = #{bReaderMobile,jdbcType=VARCHAR},
            </if>
            <if test="bReaderRemarks != null">
                b_reader_Remarks = #{bReaderRemarks,jdbcType=VARCHAR},
            </if>
        </set>
        where b_reader_id = #{bReaderId,jdbcType=INTEGER}
        and b_reader_no = #{bReaderNo,jdbcType=VARCHAR}
        and b_reader_name = #{bReaderName,jdbcType=VARCHAR}
        and b_reader_email = #{bReaderEmail,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xmx.ssm.entity.TReader">
    update t_reader
    set b_reader_password = #{bReaderPassword,jdbcType=VARCHAR},
      b_reader_borrow_number = #{bReaderBorrowNumber,jdbcType=INTEGER},
      b_reader_borrow_already_number = #{bReaderBorrowAlreadyNumber,jdbcType=INTEGER},
      b_reader_borrow_time = #{bReaderBorrowTime,jdbcType=DOUBLE},
      b_reader_mobile = #{bReaderMobile,jdbcType=VARCHAR},
      b_reader_Remarks = #{bReaderRemarks,jdbcType=VARCHAR}
    where b_reader_id = #{bReaderId,jdbcType=INTEGER}
      and b_reader_no = #{bReaderNo,jdbcType=VARCHAR}
      and b_reader_name = #{bReaderName,jdbcType=VARCHAR}
      and b_reader_email = #{bReaderEmail,jdbcType=VARCHAR}
  </update>
</mapper>